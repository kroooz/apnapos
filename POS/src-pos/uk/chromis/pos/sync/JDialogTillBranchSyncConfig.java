/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package uk.chromis.pos.sync;

import java.io.File;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLClassLoader;
import java.sql.Connection;
import java.sql.Driver;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.application.Platform;
import javafx.scene.paint.Color;
import javafx.stage.FileChooser;
import javafx.stage.Stage;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import uk.chromis.data.loader.Session;
import uk.chromis.pos.forms.AppConfig;
import uk.chromis.pos.forms.AppLocal;
import uk.chromis.pos.forms.DriverWrapper;
import uk.chromis.pos.util.AltEncrypter;

/**
 *
 * @author Dell790
 */
public class JDialogTillBranchSyncConfig extends javax.swing.JDialog {
    
    private String dirname;
    private FileChooser fileChooser;
    private File file;
    public DataLogicSync dlSync;

    /**
     * Creates new form JDialogTillBranchSyncConfig
     */
    public JDialogTillBranchSyncConfig(java.awt.Frame parent, boolean modal, DataLogicSync _dlSync) {
        super(parent, modal);
        initComponents();
        
        this.dlSync = _dlSync;
        
        Initialize();
    }
    
    private void Initialize()
    {
        dirname = System.getProperty("dirname.path");
        dirname = dirname == null ? "./" : dirname;
        
        jComboBoxDbEngine.addItem("Apache Derby Embedded");
        jComboBoxDbEngine.addItem("MySQL");
        jComboBoxDbEngine.addItem("PostgreSQL");
        jComboBoxDbEngine.setSelectedIndex(0);
        
        jTextFieldURL.setText("jdbc:derby:" + new File(new File(System.getProperty("user.home")), AppLocal.APP_ID + "-database").getAbsolutePath() + ";create=false");
        
        jTextFieldDriverLibrary.setText(new File(new File(dirname), "lib/derby-10.10.2.0.jar").getAbsolutePath());
        jTextFieldDriverClass.setText("org.apache.derby.jdbc.EmbeddedDriver");
        
        loadProperties();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jComboBoxDbEngine = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldDriverLibrary = new javax.swing.JTextField();
        jButtonSelectFile = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldDriverClass = new javax.swing.JTextField();
        jTextFieldURL = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextFieldUser = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jPasswordField = new javax.swing.JPasswordField();
        jButtonTestConnection = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabelTestConnectionStatus = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jSpinnerSyncInterval = new javax.swing.JSpinner();
        jButtonSave = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Till Branch Sync Configuration");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Branch Information"));

        jLabel5.setText("Database Engine");

        jComboBoxDbEngine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxDbEngineActionPerformed(evt);
            }
        });

        jLabel6.setText("Driver Library");

        jButtonSelectFile.setText("Select File");
        jButtonSelectFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSelectFileActionPerformed(evt);
            }
        });

        jLabel7.setText("Driver Class");

        jLabel8.setText("URL");

        jLabel9.setText("User");

        jLabel10.setText("Password");

        jButtonTestConnection.setText("Test Connection");
        jButtonTestConnection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTestConnectionActionPerformed(evt);
            }
        });

        jLabel1.setText("Test Connection Status: ");

        jLabelTestConnectionStatus.setText("Click Test Connection Button");
        jLabelTestConnectionStatus.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5))
                        .addGap(43, 43, 43)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jComboBoxDbEngine, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 229, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jTextFieldDriverLibrary, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonSelectFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButtonTestConnection)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel7))
                                .addGap(6, 6, 6)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jTextFieldURL, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldDriverClass)
                                    .addComponent(jTextFieldUser)
                                    .addComponent(jPasswordField)
                                    .addComponent(jLabelTestConnectionStatus, javax.swing.GroupLayout.DEFAULT_SIZE, 312, Short.MAX_VALUE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(0, 6, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jComboBoxDbEngine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTextFieldDriverLibrary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSelectFile))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextFieldDriverClass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jTextFieldURL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jTextFieldUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabelTestConnectionStatus))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(jButtonTestConnection))
        );

        jLabel11.setText("Sync Interval (Minutes)");

        jSpinnerSyncInterval.setModel(new javax.swing.SpinnerNumberModel(10, 10, 1000, 1));

        jButtonSave.setText("Save");
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonSave, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(18, 18, 18)
                                .addComponent(jSpinnerSyncInterval, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jSpinnerSyncInterval, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonSave)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonTestConnectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTestConnectionActionPerformed
        
        try {
            String driverlib = jTextFieldDriverLibrary.getText();
            String driver = jTextFieldDriverClass.getText();
            String url = jTextFieldURL.getText();
            String user = jTextFieldUser.getText();
            String password = jPasswordField.getText();
            ClassLoader cloader = new URLClassLoader(new URL[]{new File(driverlib).toURI().toURL()});
            DriverManager.registerDriver(new DriverWrapper((Driver) Class.forName(driver, true, cloader).newInstance()));

            Session session = new Session(url, user, password);
            Connection connection = session.getConnection();
            boolean isValid;
            isValid = (connection == null) ? false : connection.isValid(1000);
            if (isValid) {
                jLabelTestConnectionStatus.setText("Connected to the database..");
            } else {
                jLabelTestConnectionStatus.setText("Unable to connect to the database!!");
            }
        } catch (SQLException e) {
            jLabelTestConnectionStatus.setText("Unable to connect to the database!!");
        } catch (MalformedURLException | ClassNotFoundException | InstantiationException | IllegalAccessException e) {
            jLabelTestConnectionStatus.setText("Unable to connect to the database!!");
        }
        
    }//GEN-LAST:event_jButtonTestConnectionActionPerformed

    private void jButtonSelectFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSelectFileActionPerformed

        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
                "JAR File", "jar");
        chooser.setFileFilter(filter);
        int returnVal = chooser.showOpenDialog(null);
        if(returnVal == JFileChooser.APPROVE_OPTION) {
            jTextFieldDriverLibrary.setText(chooser.getSelectedFile().getAbsolutePath());
        }
        
    }//GEN-LAST:event_jButtonSelectFileActionPerformed

    private void jComboBoxDbEngineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxDbEngineActionPerformed
        
        String strEngine = jComboBoxDbEngine.getSelectedItem().toString();
        switch (strEngine) {
            case "Apache Derby Embedded":
                jTextFieldURL.setText("jdbc:derby:" + new File(new File(System.getProperty("user.home")), AppLocal.APP_ID + "-database").getAbsolutePath() + ";create=true");
                jTextFieldDriverLibrary.setText(new File(new File(dirname), "lib/derby.jar").getAbsolutePath());
                jTextFieldDriverClass.setText("org.apache.derby.jdbc.EmbeddedDriver");
                break;
            case "MySQL":
                jTextFieldURL.setText("jdbc:mysql://localhost:3306/apnapos");
                jTextFieldDriverLibrary.setText(new File(new File(dirname), "lib/mysql-connector-java-5.1.42.jar").getAbsolutePath());
                jTextFieldDriverClass.setText("com.mysql.jdbc.Driver");
                break;
            case "PostgreSQL":
                jTextFieldURL.setText("jdbc:postgresql://localhost:5432/apnapos");
                jTextFieldDriverLibrary.setText(new File(new File(dirname), "lib/postgresql-9.2-1003.jdbc4.jar").getAbsolutePath());
                jTextFieldDriverClass.setText("org.postgresql.Driver");
                break;
        }
        
    }//GEN-LAST:event_jComboBoxDbEngineActionPerformed

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        
        AltEncrypter cypher = new AltEncrypter("cypherkey" + jTextFieldUser.getText());
        String password = "crypt:" + cypher.encrypt( String.valueOf(jPasswordField.getPassword()));
        
        this.dlSync.saveTillBranchSyncConfig(
            jComboBoxDbEngine.getSelectedItem().toString(), 
            jTextFieldDriverLibrary.getText(), 
            jTextFieldDriverClass.getText(), 
            jTextFieldURL.getText(), 
            jTextFieldUser.getText(),
            password,
            jSpinnerSyncInterval.getValue().toString());
        
        
        
        this.setVisible(false);
    }//GEN-LAST:event_jButtonSaveActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonSave;
    private javax.swing.JButton jButtonSelectFile;
    private javax.swing.JButton jButtonTestConnection;
    private javax.swing.JComboBox<String> jComboBoxDbEngine;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelTestConnectionStatus;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField jPasswordField;
    private javax.swing.JSpinner jSpinnerSyncInterval;
    private javax.swing.JTextField jTextFieldDriverClass;
    private javax.swing.JTextField jTextFieldDriverLibrary;
    private javax.swing.JTextField jTextFieldURL;
    private javax.swing.JTextField jTextFieldUser;
    // End of variables declaration//GEN-END:variables

    private void loadProperties() {
        
        HashMap tillBranchSyncConfigMap = dlSync.getTillBranchSyncConfig();
        
        if(tillBranchSyncConfigMap != null){
            
            String BranchDbEngine = (String)tillBranchSyncConfigMap.get("BRANCH_DB_ENGINE");
            String BranchDbDriverLib = (String)tillBranchSyncConfigMap.get("BRANCH_DB_DRIVERLIB");
            String BranchDbDriverClass = (String)tillBranchSyncConfigMap.get("BRANCH_DB_DRIVERCLASS");
            String BranchDbUrl = (String)tillBranchSyncConfigMap.get("BRANCH_DB_URL");
            String BranchDbUser = (String)tillBranchSyncConfigMap.get("BRANCH_DB_USER");
            String BranchDbPassword = (String)tillBranchSyncConfigMap.get("BRANCH_DB_PASSWORD");
            String BranchDbSyncInterval = (String)tillBranchSyncConfigMap.get("BRANCH_DB_SYNC_INTERVAL");
            
            if(BranchDbEngine != null)
                jComboBoxDbEngine.setSelectedItem(BranchDbEngine);
            jTextFieldDriverLibrary.setText(BranchDbDriverLib);
            jTextFieldDriverClass.setText(BranchDbDriverClass);
            jTextFieldURL.setText(BranchDbUrl);
            jTextFieldUser.setText(BranchDbUser);
            
            if(BranchDbSyncInterval != null)
                jSpinnerSyncInterval.setValue(Integer.parseInt(BranchDbSyncInterval));
            
            if (BranchDbUser != null && BranchDbPassword != null && BranchDbPassword.startsWith("crypt:")) {
                AltEncrypter cypher = new AltEncrypter("cypherkey" + BranchDbUser);
                BranchDbPassword = cypher.decrypt(BranchDbPassword.substring(6));
            }
            
            jPasswordField.setText(BranchDbPassword);
            
        }
        
    }
}
