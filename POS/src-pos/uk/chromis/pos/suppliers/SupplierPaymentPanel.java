/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package uk.chromis.pos.suppliers;

import java.awt.event.FocusEvent;
import java.util.List;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import uk.chromis.basic.BasicException;
import uk.chromis.data.gui.ComboBoxValModel;
import uk.chromis.data.loader.Datas;
import uk.chromis.data.loader.SentenceList;
import uk.chromis.data.loader.SerializerWriteBasic;
import uk.chromis.data.loader.Session;
import uk.chromis.data.loader.StaticSentence;
import uk.chromis.data.loader.Transaction;
import uk.chromis.format.Formats;
import uk.chromis.pos.forms.AppLocal;
import uk.chromis.pos.forms.AppView;
import uk.chromis.pos.forms.BeanFactoryApp;
import uk.chromis.pos.forms.BeanFactoryException;
import uk.chromis.pos.forms.DataLogicSales;
import uk.chromis.pos.forms.DataLogicSystem;
import uk.chromis.pos.forms.JPanelView;
import uk.chromis.pos.sales.DataLogicReceiptsAndPayments;
import uk.chromis.pos.sync.DataLogicSync;

/**
 *
 * @author Dell790
 */
public class SupplierPaymentPanel extends javax.swing.JPanel implements JPanelView, BeanFactoryApp {

    private AppView mApp;
    private DataLogicSync dlSync;
    private Session s;
    private DataLogicSuppliers dlSuppliers;
    private DataLogicSales dlsales;
    private DataLogicSystem dlSystem;
    private DataLogicReceiptsAndPayments dlReceiptsAndPayments;
    private String localGuid;
    private SentenceList m_sentsuppliers;
    private ComboBoxValModel m_SupplierModel;
    private double total;
    private double paidThroughCash;
    private double paidThroughCard;
    private double paidThroughCheque;

    /**
     * Creates new form SupplierPaymentPanel
     */
    public SupplierPaymentPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        dpPurchaseDate = new org.jdesktop.swingx.JXDatePicker();
        jLabel1 = new javax.swing.JLabel();
        m_jSuppliers = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txtPaidThroughCash = new javax.swing.JTextField();
        txtPaidThroughCheque = new javax.swing.JTextField();
        txtPaidThroughCard = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtTotalPayment = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jButtonSave = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaPaymentDescription = new javax.swing.JTextArea();

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setText("Date");

        dpPurchaseDate.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setText("Supplier");

        m_jSuppliers.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Payments"));

        jLabel13.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel13.setText("Paid through Cash:");

        jLabel15.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel15.setText("Paid through Cheque:");

        jLabel16.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel16.setText("Paid through Card:");

        txtPaidThroughCash.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        txtPaidThroughCash.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPaidThroughCashFocusLost(evt);
            }
        });

        txtPaidThroughCheque.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        txtPaidThroughCheque.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPaidThroughChequeFocusLost(evt);
            }
        });

        txtPaidThroughCard.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        txtPaidThroughCard.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPaidThroughCardFocusLost(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel17.setText("Total Payment:");

        txtTotalPayment.setEditable(false);
        txtTotalPayment.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Help Instructions"));

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setText("Enter negative amounts if you are receiving amount from supplier.");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel4)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtPaidThroughCard, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE)
                        .addComponent(txtPaidThroughCheque, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtPaidThroughCash, javax.swing.GroupLayout.Alignment.LEADING))
                    .addComponent(txtTotalPayment, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPaidThroughCash, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPaidThroughCheque, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPaidThroughCard, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTotalPayment, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButtonSave.setText("Save");
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setText("Payment Description");

        txtAreaPaymentDescription.setColumns(20);
        txtAreaPaymentDescription.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        txtAreaPaymentDescription.setRows(5);
        jScrollPane1.setViewportView(txtAreaPaymentDescription);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonSave, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(dpPurchaseDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(m_jSuppliers, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 306, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(dpPurchaseDate, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(m_jSuppliers, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jButtonSave, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtPaidThroughCashFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPaidThroughCashFocusLost
        numberInputLostFocus(evt);
    }//GEN-LAST:event_txtPaidThroughCashFocusLost

    private void txtPaidThroughChequeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPaidThroughChequeFocusLost
        numberInputLostFocus(evt);
    }//GEN-LAST:event_txtPaidThroughChequeFocusLost

    private void txtPaidThroughCardFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPaidThroughCardFocusLost
        numberInputLostFocus(evt);
    }//GEN-LAST:event_txtPaidThroughCardFocusLost

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        
        if(!isPaymentValid()){
            
            return;
        }
        
        Transaction t = new Transaction(s) {
            @Override
            public Object transact() throws BasicException {
                
                try
                {
                    savePayment();
                }
                catch(Exception ex) {
                    throw new BasicException((String)ex.getMessage());
                }

                return null;
            }
        };
        try {
            t.execute();
            JOptionPane.showMessageDialog(null, "Saved Successfully", "Done", JOptionPane.INFORMATION_MESSAGE);
            this.resetControls();
        } catch (BasicException ex) {
            JOptionPane.showMessageDialog(null, "No Saved. Error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void savePayment() throws Exception {
        
        String supplierId = m_SupplierModel.getSelectedKey().toString();
        try
        {
            int entryNumber = this.dlSystem.getEntryNumber(AppLocal.paymentTypeString);
            
            if(paidThroughCash != 0) {
                dlReceiptsAndPayments.makePaymentOrReceiptEntry(
                    AppLocal.paymentThroughCash, 
                    -paidThroughCash, 
                    Integer.toString(entryNumber),
                    supplierId,
                    AppLocal.supplierTypeString,
                    this.txtAreaPaymentDescription.getText(),
                    dpPurchaseDate.getDate());
            }

            if(paidThroughCard != 0) {
                dlReceiptsAndPayments.makePaymentOrReceiptEntry(
                    AppLocal.paymentThroughCard, 
                    -paidThroughCard, 
                    Integer.toString(entryNumber),
                    supplierId,
                    AppLocal.supplierTypeString,
                    this.txtAreaPaymentDescription.getText(),
                    dpPurchaseDate.getDate());
            }

            if(paidThroughCheque != 0) {
                dlReceiptsAndPayments.makePaymentOrReceiptEntry(
                    AppLocal.paymentThroughCheque, 
                    -paidThroughCheque, 
                    Integer.toString(entryNumber),
                    supplierId,
                    AppLocal.supplierTypeString,
                    this.txtAreaPaymentDescription.getText(),
                    dpPurchaseDate.getDate());
            }
            
            new StaticSentence(s, "UPDATE SUPPLIERS SET CURRENT_BALANCE = COALESCE(CURRENT_BALANCE, 0) - ? WHERE ID = ?", new SerializerWriteBasic(new Datas[]{
                Datas.DOUBLE, Datas.STRING}))
                .exec( (Double)this.total, supplierId );
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null, "Error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            throw ex;
        }
    }
    
    private void resetControls() {
        dpPurchaseDate.setDate(null);
        m_jSuppliers.setSelectedIndex(0);
        txtAreaPaymentDescription.setText("");
        txtPaidThroughCash.setText("");
        txtPaidThroughCheque.setText("");
        txtPaidThroughCard.setText("");
        this.setFields();
    }
    
    private boolean isPaymentValid() {
        
        if(dpPurchaseDate.getDate() == null) {
            JOptionPane.showMessageDialog(null, "Please select Date");
            return false;
        }
        
        if( m_SupplierModel.getSelectedKey() == null ){
            JOptionPane.showMessageDialog(null, "Please select Supplier");
            return false;
        }
        
        return true;
        
    }
    
    private void numberInputLostFocus(FocusEvent evt) {
        JTextField field = (JTextField)evt.getSource();
        String text = field.getText();
        
        boolean isValidDouble = false;
        
        try
        {
            Double.parseDouble(text);
            isValidDouble = true;
        }
        catch(NumberFormatException e)
        {
          //not a double
            isValidDouble = false;
        }
        
        if(!isValidDouble) {
            field.setText("");
        }
        
        setFields();
    }
    
    private void setFields() {
        
        try
        {
            paidThroughCash = Double.parseDouble(this.txtPaidThroughCash.getText());
        }
        catch(Exception ex)
        {
            paidThroughCash = 0;
        }
        
        try
        {
            paidThroughCard = Double.parseDouble(this.txtPaidThroughCard.getText());
        }
        catch(Exception ex)
        {
            paidThroughCard = 0;
        }
        
        try
        {
            paidThroughCheque = Double.parseDouble(this.txtPaidThroughCheque.getText());
        }
        catch(Exception ex)
        {
            paidThroughCheque = 0;
        }
        
        total = paidThroughCash + paidThroughCard + paidThroughCheque;
        txtTotalPayment.setText(Formats.DOUBLE.formatValue(total));
    }
    
    @Override
    public String getTitle() {
        return AppLocal.getIntString("Menu.SupplierPayment");
    }

    @Override
    public void activate() throws BasicException {
     
        List b;
        try
        {
            dlSync = (DataLogicSync) mApp.getBean("uk.chromis.pos.sync.DataLogicSync");
            s = mApp.getSession();

            dlSuppliers = (DataLogicSuppliers) mApp.getBean("uk.chromis.pos.suppliers.DataLogicSuppliers");
            dlsales = (DataLogicSales) mApp.getBean("uk.chromis.pos.forms.DataLogicSales");
            dlSystem = (DataLogicSystem) mApp.getBean("uk.chromis.pos.forms.DataLogicSystem");
            dlReceiptsAndPayments = (DataLogicReceiptsAndPayments) mApp.getBean("uk.chromis.pos.sales.DataLogicReceiptsAndPayments");

            localGuid = dlSync.getSiteGuid();

            m_sentsuppliers = dlSuppliers.getSuppliersList(localGuid);

            b = m_sentsuppliers.list();
            m_SupplierModel = new ComboBoxValModel(b);
            m_SupplierModel.add(0, null);
            m_jSuppliers.setModel(m_SupplierModel);
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null, "Error occurred: " + ex.getMessage());
        }
        
    }

    @Override
    public boolean deactivate() {
        return true;
    }

    @Override
    public JComponent getComponent() {
        return this;
    }

    @Override
    public void init(AppView app) throws BeanFactoryException {
        
        mApp = app;
        
        
    }

    @Override
    public Object getBean() {
        return this;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jdesktop.swingx.JXDatePicker dpPurchaseDate;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> m_jSuppliers;
    private javax.swing.JTextArea txtAreaPaymentDescription;
    private javax.swing.JTextField txtPaidThroughCard;
    private javax.swing.JTextField txtPaidThroughCash;
    private javax.swing.JTextField txtPaidThroughCheque;
    private javax.swing.JTextField txtTotalPayment;
    // End of variables declaration//GEN-END:variables
}
